#Flanker sdf analyzer file

#Define relevant stimuuli
picture: event_type == "Picture"
pulses:       event_type == "Pulse"
port_input:   event_type == "Port Input"
text_input:   event_type == "Text Input"
save_logfile: event_type == "Save Logfile"
control:      event_type == "Pause" or event_type == "Resume" or event_type == "Quit"

stimulus: (picture) and (condition == "INC") or (condition == "CON") 
stim_count = count( stimulus )

#Event set 'response' contains all events that are responses and for which immediately preceding event is in the event set "stimulus". 
response: event_type == "Response" and rel_index_range(-1, -1) is stimulus
resp_count = count( response )

#Timing uncertainty
unc_over_1 : time_uncertainty > 1
over1_count = count( unc_over_1 )
unc_over_5 : time_uncertainty > 5
over5_count = count( unc_over_5 )

#Create custom analysis table with variables we want to look at
event_table custom_table (subjectID, trial, stim_arrows, event_type, condition, time)

#Classify event pairs
main(rm_all) :: code1 == "INC" or code1 == "CON"
CON(rm_all) :: code1 == "CON"
INC(rm_all) :: code1 == "INC"

#Calculate averages
correct_count = count(rm_hit)
all_resp_count = count(rm_all)
avg_overall_acc = correct_count/stim_count

avg_rt = avg(rm_all, time_diff)
correct_rt = avg(rm_hit, time_diff)
incorrect_rt = avg(rm_incorrect, time_diff)

#Create FINAL Analysis Table and print as file
event_pair_table FINAL_table(subjectID1, trial1, stim_arrows1, condition1, code1, rm_type, code2, time_diff)

print FINAL_table (rm_all, "\t", "\n")
