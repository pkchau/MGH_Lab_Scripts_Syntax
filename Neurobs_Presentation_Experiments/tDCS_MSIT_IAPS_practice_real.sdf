#MSIT IAPS sdf analyzer file

picture: event_type == "Picture"

stimulus: (picture) and (interference == "INT") or (interference == "NON") 
stimulus_count = count( stimulus )

response: event_type == "Response"
response_count = count( response )

pulses:       event_type == "Pulse"
port_input:   event_type == "Port Input"
text_input:   event_type == "Text Input"
save_logfile: event_type == "Save Logfile"
control:      event_type == "Pause" or event_type == "Resume" or event_type == "Quit"

unc_over_1 : time_uncertainty > 1
over1_count = count( unc_over_1 )
unc_over_5 : time_uncertainty > 5
over5_count = count( unc_over_5 )

event_table custom_table (subjectID, num_stim, pic_stim, interference, emotion, targ_buttons, time, code)

main(rm_all) :: interference1 == "INT" or interference1 == "NON"
INT(rm_all) :: interference1 == "INT"
NON(rm_all) :: interference1 == "NON"
POS(rm_all) :: emotion1 == "Pos"
NEG(rm_all) :: emotion1 == "Neg"
NEU(rm_all) :: emotion1 == "Neu"
POS_INT(rm_all) :: emotion1 == "Pos" and interference1 == "INT"
POS_NON(rm_all) :: emotion1 == "Pos" and interference1 == "NON"
NEG_INT(rm_all):: emotion1 == "Neg" and interference1 == "INT"
NEG_NON(rm_all) :: emotion1 == "Neg" and interference1 == "NON"
NEU_INT(rm_all) :: emotion1 == "Neu" and interference1 == "INT"
NEU_NON(rm_all) :: emotion1 == "Neu" and interference1 == "NON"
event_pair_property int_condition(INT, NON)
event_pair_property emotions(POS,NEG,NEU)

event_pair_table FINAL_table(subjectID1, trial1, num_stim1, pic_stim1, interference1, emotion1, rm_type, code2, targ_buttons1, time_diff, code1)

print FINAL_table (rm_all, "\t", "\n")