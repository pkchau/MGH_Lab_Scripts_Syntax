#MSIT IAPS sdf analyzer file

picture: event_type == "Picture"

stimulus: (picture) and (interference == "INT") or (interference == "NON") 
stimulus_count = count( stimulus )

response: event_type == "Response"
response_count = count( response )

pulses:       event_type == "Pulse"
port_input:   event_type == "Port Input"
text_input:   event_type == "Text Input"
save_logfile: event_type == "Save Logfile"
control:      event_type == "Pause" or event_type == "Resume" or event_type == "Quit"

unc_over_1 : time_uncertainty > 1
over1_count = count( unc_over_1 )
unc_over_5 : time_uncertainty > 5
over5_count = count( unc_over_5 )

event_table custom_table (subjectID, num_stim, pic_stim, interference, emotion, targ_buttons, pic_dur, stim_dur, time, code)

main(rm_all) :: interference1 == "INT" or interference1 == "NON"
INT(rm_all) :: interference1 == "INT"
NON(rm_all) :: interference1 == "NON"
POS(rm_all) :: emotion1 == "Pos"
NEG(rm_all) :: emotion1 == "Neg"
NEU(rm_all) :: emotion1 == "Neu"
POS_INT(rm_all) :: emotion1 == "Pos" and interference1 == "INT"
POS_NON(rm_all) :: emotion1 == "Pos" and interference1 == "NON"
NEG_INT(rm_all):: emotion1 == "Neg" and interference1 == "INT"
NEG_NON(rm_all) :: emotion1 == "Neg" and interference1 == "NON"
NEU_INT(rm_all) :: emotion1 == "Neu" and interference1 == "INT"
NEU_NON(rm_all) :: emotion1 == "Neu" and interference1 == "NON"
event_pair_property int_condition(INT, NON)
event_pair_property emotions(POS,NEG,NEU)

correct_lvl_1(rm_hit) :: (stim_dur1 == "1292")
correct_lvl_1_count = count(correct_lvl_1)
lvl_1(rm_all) :: (stim_dur1 == "1292")
lvl_1_count = count(lvl_1)

correct_lvl_2(rm_hit) :: (stim_dur1 == "892")
correct_lvl_2_count = count(correct_lvl_2)
lvl_2(rm_all) :: (stim_dur1 == "892")
lvl_2_count = count(lvl_2)

correct_lvl_3(rm_hit) :: (stim_dur1 == "492")
correct_lvl_3_count = count(correct_lvl_3)
lvl_3(rm_all) :: (stim_dur1 == "492")
lvl_3_count = count(lvl_3)

correct_lvl_4(rm_hit) :: (stim_dur1 == "292")
correct_lvl_4_count = count(correct_lvl_4)
lvl_4(rm_all) :: (stim_dur1 == "292")
lvl_4_count = count(lvl_4)

correct_lvl_5(rm_hit) :: (stim_dur1 == "92")
correct_lvl_5_count = count(correct_lvl_5)
lvl_5(rm_all) :: (stim_dur1 == "92")
lvl_5_count = count(lvl_5)

correct_count = count(rm_hit)

RT_1(rm_all) :: (time_diff > 0) and (stim_dur1 == "1292")
RT_2(rm_all) :: (time_diff > 0) and (stim_dur1 == "892")
RT_3(rm_all) :: (time_diff > 0) and (stim_dur1 == "492")
RT_4(rm_all) :: (time_diff > 0) and (stim_dur1 == "292")
RT_5(rm_all) :: (time_diff > 0) and (stim_dur1 == "92")

#Calculate averages
avg_acc_all_levels = correct_count/stimulus_count
avg_lvl_1_acc = correct_lvl_1_count/lvl_1_count
avg_lvl_2_acc = correct_lvl_2_count/lvl_2_count
avg_lvl_3_acc = correct_lvl_3_count/lvl_3_count
avg_lvl_4_acc = correct_lvl_4_count/lvl_4_count
avg_lvl_5_acc = correct_lvl_5_count/lvl_5_count

avg_lvl_1_RT = avg(RT_1, time_diff) 
avg_lvl_2_RT = avg(RT_2, time_diff)
avg_lvl_3_RT = avg(RT_3, time_diff)
avg_lvl_4_RT = avg(RT_4, time_diff)
avg_lvl_5_RT = avg(RT_5, time_diff)

event_pair_table FINAL_table(subjectID1, trial1, num_stim1, pic_stim1, interference1, emotion1, rm_type, code2, targ_buttons1, pic_dur1, stim_dur1, time_diff, code1)
print FINAL_table (rm_all, "\t", "\n")
print "avg acc over all nbacks= ", avg_acc_all_levels
print "avg lvl 1 acc = ", avg_lvl_1_acc
print "avg lvl 2 acc = ", avg_lvl_2_acc
print "avg lvl 3 acc = ", avg_lvl_3_acc
print "avg lvl 4 acc = ", avg_lvl_4_acc
print "avg lvl 5 acc = ", avg_lvl_5_acc
print "avg lvl 1 RT = ", avg_lvl_1_RT
print "avg lvl 2 RT = ", avg_lvl_2_RT
print "avg lvl 3 RT = ", avg_lvl_3_RT
print "avg lvl 4 RT = ", avg_lvl_4_RT
print "avg lvl 5 RT = ", avg_lvl_5_RT