#nback sdf analyzer file

#Define stimuuli
picture: event_type == "Picture"
pulses:       event_type == "Pulse"
port_input:   event_type == "Port Input"
text_input:   event_type == "Text Input"
save_logfile: event_type == "Save Logfile"
control:      event_type == "Pause" or event_type == "Resume" or event_type == "Quit"

stimulus: (picture) and (is_target!="")
stim_count = count (stimulus)

#Event set 'response' contains all events that are responses and for which immediately preceding event is in the event set "stimulus". 
response: event_type == "Response" and rel_index_range(-1, -1) is stimulus
response_count = count(response)

#timing uncertainty
unc_over_1 : time_uncertainty > 1
over1_count = count( unc_over_1 )
unc_over_5 : time_uncertainty > 5
over5_count = count( unc_over_5 )

#create custom analysis table
event_table custom_table(subjectID, nback, trial, event_type, letter, is_target, time)

#Matches stimulus w/ response (w/in 100-2000ms of first event)
pair:: simple_match_all(100,2000,stimulus,response)

#Classify event pairs
target(pair) :: is_target1=="yes"
target_count = count(target)

all_resp(pair) :: code2 == "1" or code2 == "2"
all_resp_count = count(all_resp)
correct_hit(pair) :: (is_target1 == "yes") and (code2 == "1" or code2 == "2")
correct_hit_count = count(correct_hit)
correct_noresp(pair) :: is_target1 == "no" and code2 == ""
correct_noresp_count = count(correct_noresp) 
correct(pair) :: (is_target1 == "yes") and (code2 == "1" or code2 == "2") or (is_target1 == "no" and code2 == "")
correct_count = count(correct)

miss(target):: code2 == "" and is_target1 == "yes"
miss_count = count(miss)
false_alarm (pair):: (is_target1 == "no") and (code2 == "1" or code2 == "2")
false_alarm_count = count (false_alarm)

#Check event pairs
check = stim_count - correct_count - miss_count - false_alarm_count

#Calculate averages
avg_overall_acc = correct_count/stim_count

avg_rt = avg(all_resp, time_diff)
correct_rt = avg(correct_hit, time_diff)
false_alarm_rt = avg(false_alarm, time_diff)

#Define event pairs
event_pair_property type (correct, miss, false_alarm)

#Create FINAL Analysis Table and print as file
event_pair_table FINAL_table(subjectID1, nback1, trial1, letter1, is_target1, code2, type, time_diff)
print FINAL_table (pair, "\t", "\n")
